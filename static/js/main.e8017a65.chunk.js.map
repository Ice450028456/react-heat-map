{"version":3,"sources":["App.module.css","logo.svg","../../../src/WeekLables.tsx","../../../src/Rect.tsx","../../../src/RectDay.tsx","../../../src/utils.ts","../../../src/SVG.tsx","../../../src/index.tsx","../README.md","App.tsx","index.tsx"],"names":["module","exports","WeekLables","weekLables","rectSize","space","useMemo","Array","key","x","y","dy","idx","Rect","props","rx","ry","RectDay","date","row","column","other","width","height","data-index","data-row","data-column","data-date","isValidDate","isNaN","getDateToString","SVG","startDate","endDate","rectProps","renderRect","value","panelColors","0","8","4","12","32","useState","gridNum","setGridNum","leftPad","setLeftPad","svgRef","React","nums","numberSort","Object","parseInt","item","data","result","Date","formatData","useEffect","Math","ref","transform","dayProps","fill","currentDate","num","color","a","existColor","elm","HeatMap","prefixCls","className","others","cls","filter","Boolean","join","count","content","data2","darkColor","App","setValue","enableEndDate","setEnableEndDate","enableDark","setEnableDark","enableCircle","setEnableCircle","setRectSize","undefined","enableWeekLables","setEnableWeekLables","styles","app","zIndex","fixed","href","header","src","logo","alt","info","example","style","backgroundColor","onClick","console","log","r","cx","cy","margin","tools","paddingLeft","type","checked","onChange","e","target","name","isArray","JSON","stringify","display","source","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8017a65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__zXbNq\",\"logo\":\"App_logo__bozgC\",\"info\":\"App_info__2zi0T\",\"app\":\"App_app__mSvsv\",\"content\":\"App_content__24QPC\",\"example\":\"App_example__MjeIV\",\"tools\":\"App_tools__QCwk2\"};","export default __webpack_public_path__ + \"static/media/logo.3931a054.svg\";","import React, { Fragment, useMemo } from 'react';\nimport { SVGProps } from './SVG';\n\nexport interface WeekLablesProps extends React.SVGProps<SVGTextElement> {\n  weekLables: SVGProps['weekLables'];\n  rectSize: SVGProps['rectSize'];\n  space: SVGProps['space'];\n}\nexport const WeekLables = ({ weekLables = [], rectSize = 0, space = 0 }: WeekLablesProps) =>\n  useMemo(\n    () => (\n      <Fragment>\n        {[...Array(7)].map((_, idx) => {\n          if (weekLables && weekLables[idx]) {\n            return (\n              <text key={idx} x={15} y={15} dy={(idx + 1) * (rectSize + space)}>\n                {weekLables[idx]}\n              </text>\n            );\n          }\n          return undefined;\n        })}\n      </Fragment>\n    ),\n    [rectSize, space, weekLables],\n  );\n","import React from 'react';\n\nexport interface RectProps extends React.SVGProps<SVGRectElement> {}\nexport const Rect = (props: RectProps) => <rect {...props} rx=\"2\" ry=\"2\" />;\n","import React, { useMemo } from 'react';\nimport { SVGProps } from './SVG';\nimport { Rect, RectProps } from './Rect';\n\nexport interface RectDayDefaultProps {\n  space?: SVGProps['space'];\n  rectSize?: SVGProps['rectSize'];\n  column?: number;\n  row?: number;\n  date?: string;\n}\n\nexport interface RectDayProps extends RectDayDefaultProps, RectProps {}\nexport const RectDay = ({ rectSize = 0, space = 0, date, row = 0, column = 0, ...other }: RectDayProps) =>\n  useMemo(() => {\n    return (\n      <Rect\n        key={row}\n        {...other}\n        width={rectSize}\n        height={rectSize}\n        x={column * (rectSize + space)}\n        y={(rectSize + space) * row}\n        data-index={column * 7 + row}\n        data-row={row}\n        data-column={column}\n        data-date={date}\n      />\n    );\n  }, [column, date, other, rectSize, row, space]);\n","import { SVGProps, HeatMapValue } from './SVG';\n\nfunction isValidDate(date: Date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\n\nexport function getDateToString(date: Date) {\n  return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\n}\n\nexport function formatData(data: SVGProps['value'] = []) {\n  const result: Record<string, HeatMapValue> = {};\n  data.forEach((item) => {\n    if (item.date && isValidDate(new Date(item.date))) {\n      item.date = getDateToString(new Date(item.date));\n      result[item.date] = item;\n    }\n  });\n  return result;\n}\n\n/** 排序 比较函数 */\nexport function numberSort(keys: number[] = []) {\n  return keys.sort((x, y) => {\n    if (x < y) return -1;\n    else if (x > y) return 1;\n    return 0;\n  });\n}\n\nexport function existColor(num: number = 0, nums: number[], panelColors: Record<number, string> = {}) {\n  let color = '';\n  for (let a = 0; a < nums.length; a += 1) {\n    if (nums[a] > num) {\n      color = panelColors[nums[a]];\n      break;\n    }\n    color = panelColors[nums[a]];\n  }\n  return color;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { WeekLables } from './WeekLables';\nimport { RectDay, RectDayDefaultProps } from './RectDay';\nimport { formatData, getDateToString, existColor, numberSort } from './utils';\n\nconst oneDayTime = 24 * 60 * 60 * 1000;\n\nexport type HeatMapValue = {\n  date: string;\n  content: string | string[] | React.ReactNode;\n  count: number;\n};\n\nexport type RectDayElement<T = SVGRectElement> = RectDayDefaultProps & React.SVGProps<T>;\n\nexport interface SVGProps extends React.SVGProps<SVGSVGElement> {\n  startDate?: Date;\n  endDate?: Date;\n  rectSize?: number;\n  space?: number;\n  rectProps?: RectDayElement | RectDayDefaultProps;\n  renderRect?: <E = SVGRectElement>(data: E & RectDayDefaultProps & { fill?: string }) => React.ReactElement | void;\n  value?: Array<HeatMapValue>;\n  weekLables?: string[] | false;\n  monthLables?: string[];\n  panelColors?: Record<number, string>;\n}\n\nexport default function SVG(props: SVGProps) {\n  const {\n    rectSize = 11,\n    space = 2,\n    startDate = new Date(),\n    endDate,\n    rectProps,\n    renderRect,\n    value = [],\n    weekLables = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    monthLables = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    panelColors = { 0: '#EBEDF0', 8: '#7BC96F', 4: '#C6E48B', 12: '#239A3B', 32: '#196127' },\n    ...other\n  } = props || {};\n  const [gridNum, setGridNum] = useState(0);\n  const [leftPad, setLeftPad] = useState(!!weekLables ? 28 : 5);\n  const svgRef = React.createRef<SVGSVGElement>();\n  const nums = useMemo(() => numberSort(Object.keys(panelColors).map((item) => parseInt(item, 10))), [panelColors]);\n  const data = useMemo(() => formatData(value), [value]);\n  useEffect(() => setLeftPad(!!weekLables ? 28 : 5), [weekLables]);\n  useEffect(() => {\n    if (svgRef.current) {\n      const width = svgRef.current.clientWidth - leftPad || 0;\n      setGridNum(Math.floor(width / (rectSize + space)) || 0);\n    }\n  }, [rectSize, svgRef, space, leftPad]);\n  return (\n    <svg ref={svgRef} {...other}>\n      <WeekLables weekLables={weekLables} rectSize={rectSize} space={space} />\n      <g transform={`translate(${leftPad}, 20)`}>\n        {[...Array(gridNum)].map((_, idx) => {\n          return (\n            <g key={idx} data-column={idx}>\n              {[...Array(7)].map((_, cidx) => {\n                const dayProps: RectDayElement = {\n                  ...rectProps,\n                  rectSize,\n                  space,\n                  key: cidx,\n                  row: cidx,\n                  column: idx,\n                  fill: '#EBEDF0',\n                };\n                if (startDate instanceof Date) {\n                  const currentDate = new Date(startDate.getTime() + oneDayTime * (idx * 7 + cidx));\n                  dayProps.date = getDateToString(currentDate);\n                  if (endDate instanceof Date && currentDate.getTime() > endDate.getTime()) {\n                    return null;\n                  }\n                }\n                if (dayProps.date && data[dayProps.date] && panelColors && Object.keys(panelColors).length > 0) {\n                  dayProps.fill = existColor(data[dayProps.date].count || 0, nums, panelColors);\n                } else if (panelColors && panelColors[0]) {\n                  dayProps.fill = panelColors[0];\n                }\n                if (renderRect && typeof renderRect === 'function') {\n                  const elm = renderRect(dayProps);\n                  if (elm && React.isValidElement(elm)) {\n                    return elm;\n                  }\n                }\n                return <RectDay {...dayProps} />;\n              })}\n            </g>\n          );\n        })}\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport SVG, { SVGProps } from './SVG';\nimport './style/index.less';\n\nexport * from './SVG';\n\nexport interface HeatMapProps extends SVGProps {\n  prefixCls?: string;\n}\n\nexport default function HeatMap(props: HeatMapProps) {\n  const { prefixCls = 'w-heatmap', className, ...others } = props;\n  const cls = [className, prefixCls].filter(Boolean).join(' ');\n  return <SVG className={cls} {...others} />;\n}\n","export default \"HeatMap 日历热图\\n===\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-heat-map/workflows/Build%20&%20Deploy/badge.svg)](https://github.com/uiwjs/react-heat-map/actions)\\n[![Issues](https://img.shields.io/github/issues/uiwjs/react-heat-map.svg)](https://github.com/uiwjs/react-heat-map/issues)\\n[![Forks](https://img.shields.io/github/forks/uiwjs/react-heat-map.svg)](https://github.com/uiwjs/react-heat-map/network)\\n[![Stars](https://img.shields.io/github/stars/uiwjs/react-heat-map.svg)](https://github.com/uiwjs/react-heat-map/stargazers)\\n[![Release](https://img.shields.io/github/release/uiwjs/react-heat-map)](https://github.com/uiwjs/react-heat-map/releases)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-heat-map.svg)](https://www.npmjs.com/package/@uiw/react-heat-map)\\n[![npm bundle size](https://img.shields.io/bundlephobia/minzip/@uiw/react-heat-map)](https://bundlephobia.com/result?p=@uiw/react-heat-map)\\n\\nReact component create calendar heatmap to visualize time series data, a la github contribution graph.\\n\\n## Install\\n\\n```bash\\n# Not dependent on uiw.\\nnpm install @uiw/react-heat-map --save\\n```\\n\\n## Basic Usage\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport HeatMap from '@uiw/react-heat-map';\\n\\nconst Demo = () => {\\n  const value = [\\n    { date: '2016/01/11', count:2, content:['一条消息来了！','一条消息来了！'] },\\n    { date: '2016/04/11', count:2, content:['一条消息来了！'] },\\n    { date: '2016/05/01', count:5, content:['需要显示的数据'] },\\n    { date: '2016/05/02', count:5, content:['空的没有消息'] },\\n    { date: '2016/05/04', count:11, content:['些放弃的人会这样想'] },\\n  ];\\n  return (\\n    <div>\\n      <HeatMap value={value} startDate={new Date('2016/01/01')} />\\n    </div>\\n  )\\n};\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| value | Data to be displayed, **required** | Array | `[]` |\\n| rectSize | Grid size | number | `11` |\\n| startDate | Start date | Date | `new Date()` |\\n| endDate | End date | Date | - |\\n| space | Interval between grid sizes | number | `2` | \\n| rectProps | Grid node attribute settings | `React.SVGProps<SVGRectElement>` | `2` |\\n| weekLables | Week display | string[] | `['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']` | \\n| monthLables | Month display | string[] | `['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']` | \\n| panelColors | Backgroud color of active colors | `Record<number, string>` | `{ 0: '#EBEDF0', 8: '#7BC96F', 4: '#C6E48B', 12: '#239A3B', 32: '#196127' }` | \\n| renderRect | Single block re-render | `(SVGRectElement & RectDayDefaultProps & { fill?: string }) => React.ReactNode` | - |\\n\\n## Development\\n\\n**`development`**\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**`production`**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\\n\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";","import React, { useState } from 'react';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport logo from './logo.svg';\nimport styles from './App.module.css';\nimport HeatMap, { RectDayElement } from '../';\nimport MDStr from '../README.md';\n\nconst data = [\n  { date: '2016/01/11', count: 2, content: ['一条消息来了！', '一条消息来了！'] },\n  { date: '2016/03/02', count: 5, content: ['空的没有消息'] },\n  { date: '2016/03/04', count: 11, content: ['些放弃的人会这样想'] },\n  { date: '2016/03/14', count: 31, content: ['需要显示的数据2'] },\n  { date: '2016/03/16', count: 2, content: ['些放弃的人会这样想3'] },\n  { date: '2016/04/11', count: 2, content: ['一条消息来了！'] },\n  { date: '2016/05/01', count: 5, content: ['需要显示的数据'] },\n  { date: '2016/05/02', count: 5, content: ['空的没有消息'] },\n  { date: '2016/05/04', count: 11, content: ['些放弃的人会这样想'] },\n  { date: '2016/05/14', count: 31, content: ['需要显示的数据2'] },\n  { date: '2016/05/16', count: 2, content: ['些放弃的人会这样想3'] },\n  { date: '2016/05/17', count: 2, content: ['生活中根本就用不到吧？'] },\n  { date: '2016/05/18', count: 2, content: ['也许差别不是那么大吧？'] },\n  { date: '2016/05/19', count: 8, content: ['您可以直接在'] },\n  { date: '2016/05/20', count: 6, content: ['我有一个大胆的想法'] },\n  { date: '2016/05/21', count: 41, content: ['毕竟时间精力有限'] },\n  { date: '2016/05/22', count: 6, content: ['友谊赛事。'] },\n  { date: '2016/06/11', count: 2, content: ['一条消息来了！'] },\n  { date: '2016/07/01', count: 5, content: ['需要显示的数据'] },\n  { date: '2016/07/02', count: 5, content: ['空的没有消息'] },\n  { date: '2016/07/04', count: 11, content: ['些放弃的人会这样想'] },\n  { date: '2016/07/14', count: 31, content: ['需要显示的数据2'] },\n  { date: '2016/07/16', count: 2, content: ['些放弃的人会这样想3'] },\n  { date: '2016/07/17', count: 2, content: ['生活中根本就用不到吧？'] },\n  { date: '2016/07/18', count: 2, content: ['也许差别不是那么大吧？'] },\n  { date: '2016/07/19', count: 8, content: ['您可以直接在'] },\n  { date: '2016/07/20', count: 6, content: ['我有一个大胆的想法'] },\n  { date: '2016/07/21', count: 41, content: ['毕竟时间精力有限'] },\n  { date: '2016/07/22', count: 6, content: ['友谊赛事。'] },\n];\nconst data2 = [\n  { date: '2016/04/02', count: 5, content: ['空的没有消息'] },\n  { date: '2016/04/04', count: 11, content: ['些放弃的人会这样想'] },\n  { date: '2016/04/14', count: 31, content: ['需要显示的数据2'] },\n  { date: '2016/04/16', count: 2, content: ['些放弃的人会这样想3'] },\n  { date: '2016/04/17', count: 2, content: ['生活中根本就用不到吧？'] },\n  { date: '2016/04/18', count: 2, content: ['也许差别不是那么大吧？'] },\n  { date: '2016/04/19', count: 8, content: ['您可以直接在'] },\n  { date: '2016/04/11', count: 2, content: ['一条消息来了！'] },\n  { date: '2016/04/01', count: 5, content: ['需要显示的数据'] },\n  { date: '2016/04/02', count: 5, content: ['空的没有消息'] },\n  { date: '2016/04/04', count: 11, content: ['些放弃的人会这样想'] },\n  { date: '2016/04/14', count: 31, content: ['需要显示的数据2'] },\n  { date: '2016/04/16', count: 2, content: ['些放弃的人会这样想3'] },\n  { date: '2016/04/17', count: 2, content: ['生活中根本就用不到吧？'] },\n  { date: '2016/04/18', count: 2, content: ['也许差别不是那么大吧？'] },\n  { date: '2016/04/19', count: 8, content: ['您可以直接在'] },\n  { date: '2016/04/20', count: 6, content: ['我有一个大胆的想法'] },\n  { date: '2016/04/21', count: 41, content: ['毕竟时间精力有限'] },\n  { date: '2016/04/22', count: 6, content: ['友谊赛事。'] },\n];\n\nconst darkColor = { 0: 'rgb(255 255 255 / 25%)', 8: '#7BC96F', 4: '#C6E48B', 12: '#239A3B', 32: '#196127' };\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState(data2);\n  const [enableEndDate, setEnableEndDate] = useState(false);\n  const [enableDark, setEnableDark] = useState(false);\n  const [enableCircle, setEnableCircle] = useState(false);\n  const [rectSize, setRectSize] = useState(11);\n  const [enableWeekLables, setEnableWeekLables] = useState<false | undefined | string[]>(undefined);\n  return (\n    <div className={styles.app}>\n      <GitHubCorners zIndex={9999} fixed href=\"https://github.com/uiwjs/react-heat-map\" />\n      <header className={styles.header}>\n        <img src={logo} className={styles.logo} alt=\"react logo\" />\n        <p className={styles.info}>\n          React component create calendar heatmap to visualize time series data, a la github contribution graph.\n        </p>\n      </header>\n      <div className={styles.example} style={{ width: 663 }}>\n        <HeatMap\n          style={{\n            backgroundColor: enableDark ? '#000' : '#fff',\n            color: enableDark ? '#fff' : '#000',\n          }}\n          panelColors={enableDark ? darkColor : undefined}\n          width={663}\n          rectSize={rectSize}\n          weekLables={enableWeekLables}\n          startDate={new Date('2016/01/01')}\n          endDate={enableEndDate ? new Date('2016/6/01') : undefined}\n          value={value}\n          rectProps={{\n            onClick: () => {\n              console.log('wwww');\n            },\n          }}\n          renderRect={({\n            rectSize,\n            column,\n            space,\n            row,\n            fill,\n            date,\n            rx,\n            ...props\n          }: RectDayElement<SVGCircleElement>) => {\n            if (!enableCircle) return undefined;\n            return (\n              <circle\n                {...props}\n                fill={fill}\n                r={rectSize! / 2}\n                cx={column! * (rectSize! + space!) + 4}\n                cy={(rectSize! + space!) * row! + 5}\n                width={rectSize}\n                height={rectSize}\n              />\n            );\n          }}\n        />\n      </div>\n      <div style={{ width: 663, margin: '0 auto' }} className={styles.tools}>\n        <div style={{ paddingLeft: 10 }}>\n          <button onClick={() => setValue(data)}>Value 1</button>\n          <button onClick={() => setValue(data2)}>Value 2</button>\n        </div>\n        <label>\n          <input type=\"checkbox\" checked={enableEndDate} onChange={(e) => setEnableEndDate(e.target.checked)} />\n          endDate = {enableEndDate ? '2016/6/01' : 'undefined'}\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={enableDark} onChange={(e) => setEnableDark(e.target.checked)} />\n          {enableDark ? 'dark' : 'light'}\n        </label>\n\n        <label>\n          <input type=\"checkbox\" checked={enableCircle} onChange={(e) => setEnableCircle(e.target.checked)} />\n          {enableCircle ? 'Circle' : 'Rect'}\n        </label>\n\n        <label>\n          <input\n            type=\"radio\"\n            name=\"weekLables\"\n            checked={enableWeekLables === undefined}\n            onChange={(e) => setEnableWeekLables(undefined)}\n          />\n          weekLables = undefined\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"weekLables\"\n            checked={enableWeekLables === false}\n            onChange={(e) => setEnableWeekLables(false)}\n          />\n          weekLables = false\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"weekLables\"\n            checked={Array.isArray(enableWeekLables)}\n            onChange={(e) => setEnableWeekLables(['日', '一', '', '三', '', '五', '六'])}\n          />\n          weekLables = {JSON.stringify(['日', '一', '', '三', '', '五', '六'])}\n        </label>\n\n        <div style={{ display: 'flex' }}>\n          <label>\n            <input type=\"radio\" name=\"rectSize\" checked={rectSize === 11} onChange={(e) => setRectSize(11)} />\n            rectSize = 11\n          </label>\n          <label>\n            <input type=\"radio\" name=\"rectSize\" checked={rectSize === 12} onChange={(e) => setRectSize(12)} />\n            rectSize = 12\n          </label>\n          <label>\n            <input type=\"radio\" name=\"rectSize\" checked={rectSize === 14} onChange={(e) => setRectSize(14)} />\n            rectSize = 14\n          </label>\n        </div>\n      </div>\n      <MarkdownPreview source={MDStr} className={styles.content} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@uiw/reset.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}